{"ast":null,"code":"var _jsxFileName = \"/Users/christoskalogridakis/projects/demo/CocktailAPI/cocktailsapi/src/pages/recipes/RecipeList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport mockCocktails from '../../data/mockCocktails'; // Import the mock cocktail data\nimport styles from '../../styles/recipelist.module.css'; // Import CSS module for styling\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortAlphaAsc, faSortAlphaDesc } from \"@fortawesome/free-solid-svg-icons\"; // Import the download icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeList = () => {\n  _s();\n  const [filter, setFilter] = useState('');\n  const [complexity, setComplexity] = useState('');\n  const [sortOrder, setSortOrder] = useState('asc'); // New state for sorting, default to ascending\n\n  // Function to toggle sorting between A to Z and Z to A\n  const toggleSortOrder = () => {\n    setSortOrder(prevOrder => prevOrder === 'asc' ? 'desc' : 'asc');\n  };\n\n  // Filter cocktails based on style and complexity\n  const filteredCocktails = mockCocktails.filter(cocktail => {\n    const matchesStyle = filter ? cocktail.style === filter : true;\n    const matchesComplexity = complexity ? cocktail.complexityLevel === complexity : true;\n    return matchesStyle && matchesComplexity;\n  }).sort((a, b) => {\n    // Sort cocktails alphabetically based on the selected sort order\n    if (sortOrder === 'asc') {\n      return a.name.localeCompare(b.name);\n    } else {\n      return b.name.localeCompare(a.name);\n    }\n  });\n\n  // Get unique styles and complexities for filter options\n  const stylesOptions = [...new Set(mockCocktails.map(cocktail => cocktail.style))];\n  const complexityOptions = [...new Set(mockCocktails.map(cocktail => cocktail.complexityLevel))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.recipeList,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cocktail Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.filters,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Filter by Style:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setFilter(e.target.value),\n          value: filter,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), stylesOptions.map(style => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: style,\n            children: style\n          }, style, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Filter by Complexity:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setComplexity(e.target.value),\n          value: complexity,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), complexityOptions.map(level => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: level,\n            children: level\n          }, level, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleSortOrder,\n        className: styles.sortButton,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: sortOrder === 'asc' ? faSortAlphaAsc : faSortAlphaDesc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.recipeGrid,\n      children: filteredCocktails.map(cocktail => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.recipeCard,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/recipes/${cocktail.id}`,\n          className: styles.recipeLink,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: cocktail.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Style:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 18\n            }, this), \" \", cocktail.style]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Complexity:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 18\n            }, this), \" \", cocktail.complexityLevel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, cocktail.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeList, \"SJlWa4XbJDyQexpamJd/4urakX4=\");\n_c = RecipeList;\nexport default RecipeList;\nvar _c;\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"names":["React","useState","Link","mockCocktails","styles","FontAwesomeIcon","faSortAlphaAsc","faSortAlphaDesc","jsxDEV","_jsxDEV","RecipeList","_s","filter","setFilter","complexity","setComplexity","sortOrder","setSortOrder","toggleSortOrder","prevOrder","filteredCocktails","cocktail","matchesStyle","style","matchesComplexity","complexityLevel","sort","a","b","name","localeCompare","stylesOptions","Set","map","complexityOptions","className","recipeList","children","fileName","_jsxFileName","lineNumber","columnNumber","filters","onChange","e","target","value","level","onClick","sortButton","icon","recipeGrid","recipeCard","to","id","recipeLink","_c","$RefreshReg$"],"sources":["/Users/christoskalogridakis/projects/demo/CocktailAPI/cocktailsapi/src/pages/recipes/RecipeList.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport mockCocktails from '../../data/mockCocktails'; // Import the mock cocktail data\nimport styles from '../../styles/recipelist.module.css'; // Import CSS module for styling\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortAlphaAsc, faSortAlphaDesc } from \"@fortawesome/free-solid-svg-icons\"; // Import the download icon\n\nconst RecipeList = () => {\n  const [filter, setFilter] = useState('');\n  const [complexity, setComplexity] = useState('');\n  const [sortOrder, setSortOrder] = useState('asc'); // New state for sorting, default to ascending\n\n  // Function to toggle sorting between A to Z and Z to A\n  const toggleSortOrder = () => {\n    setSortOrder(prevOrder => (prevOrder === 'asc' ? 'desc' : 'asc'));\n  };\n\n  // Filter cocktails based on style and complexity\n  const filteredCocktails = mockCocktails\n    .filter(cocktail => {\n      const matchesStyle = filter ? cocktail.style === filter : true;\n      const matchesComplexity = complexity ? cocktail.complexityLevel === complexity : true;\n      return matchesStyle && matchesComplexity;\n    })\n    .sort((a, b) => {\n      // Sort cocktails alphabetically based on the selected sort order\n      if (sortOrder === 'asc') {\n        return a.name.localeCompare(b.name);\n      } else {\n        return b.name.localeCompare(a.name);\n      }\n    });\n\n  // Get unique styles and complexities for filter options\n  const stylesOptions = [...new Set(mockCocktails.map(cocktail => cocktail.style))];\n  const complexityOptions = [...new Set(mockCocktails.map(cocktail => cocktail.complexityLevel))];\n\n  return (\n    <div className={styles.recipeList}>\n      <h1>Cocktail Recipes</h1>\n\n      {/* Filter Options */}\n      <div className={styles.filters}>\n        <label>\n          Filter by Style:\n          <select onChange={(e) => setFilter(e.target.value)} value={filter}>\n            <option value=\"\">All</option>\n            {stylesOptions.map(style => (\n              <option key={style} value={style}>{style}</option>\n            ))}\n          </select>\n        </label>\n\n        <label>\n          Filter by Complexity:\n          <select onChange={(e) => setComplexity(e.target.value)} value={complexity}>\n            <option value=\"\">All</option>\n            {complexityOptions.map(level => (\n              <option key={level} value={level}>{level}</option>\n            ))}\n          </select>\n        </label>\n\n        {/* Sort Button */}\n        <button onClick={toggleSortOrder} className={styles.sortButton}>\n\n          <FontAwesomeIcon icon={sortOrder === 'asc' ? faSortAlphaAsc : faSortAlphaDesc} />\n\n        </button>\n      </div>\n\n      {/* Cocktail List */}\n      <div className={styles.recipeGrid}>\n        {filteredCocktails.map(cocktail => (\n          <div key={cocktail.id} className={styles.recipeCard}>\n            <Link to={`/recipes/${cocktail.id}`} className={styles.recipeLink}>\n              <h2>{cocktail.name}</h2>\n              <p><strong>Style:</strong> {cocktail.style}</p>\n              <p><strong>Complexity:</strong> {cocktail.complexityLevel}</p>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}